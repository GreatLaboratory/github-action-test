# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options: 
        - api-gateway
        - career-svc
      message:
        required: true

env:
  APP_NAME: ${{ github.event.inputs.name }}
  APP_REPOSITORY: ${{ github.event.inputs.name }}
  NAMESPACE: biz
  IMAGE: asia-northeast1-docker.pkg.dev/qmit-io/${{ github.event.inputs.name }}/server
  GIT: ${GITHUB_SHA::8}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#   set-up-ns:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set namespace util
#         if: ${{ github.event.inputs.name == 'api-gateway' }}
#         id: vars
#         run: echo ::set-output name=ns::"util"
#       - name: Set namespace util
#         if: ${{ github.event.inputs.name == 'api-gateway' }}
#         id: vars
#         run: echo ::set-output name=ns::"util"
#       - name: Check outputs
#         run: echo ${{ steps.vars.outputs.ns }}
#   ns-biz:
#     runs-on: ubuntu-latest
#     if: ${{ github.event.inputs.name != 'api-gateway' }}
#     steps:
#       - name: Set namespace
#         id: vars
#         run: echo ::set-output name=ns::"biz"
#       - name: Check outputs
#         run: echo ${{ steps.vars.outputs.ns }}
  # This workflow contains a single job called "build"
  build:
    if: github.ref == 'refs/heads/main'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set git short SHA outputs
        id: vars
        run: 
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo ${{ steps.vars.outputs.sha_short }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Extract branch name
        id: extract_branch
        shell: bash 
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Send greeting
        run: echo "${{ github.event.inputs.message }} ${{ github.event.inputs.name }} ${{ steps.extract_branch.outputs.branch }}"
      - name: Send greeting2
        run: echo "$APP_NAME $APP_REPOSITORY $IMAGE"
      - name: Send greeting3
        run: echo ${GITHUB_SHA::8}
      - name: Send greeting4
        run: echo ${{ steps.extract_branch.outputs.branch }}
        
  test:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - run: echo "hi"
